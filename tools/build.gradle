//打包的时候 把build / libs 里面的tools-sources 放到实际工程里面， 设置源码就可以看见了


apply plugin: 'com.android.library'
android {
    compileSdkVersion 28



    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }

        ndk {
            abiFilters "armeabi-v7a"
            abiFilters "x86"
//            abiFilters "armeabi"
        }
    }
    lintOptions{
        //// 仅检查指定问题  这里空就是什么也不检查
        check ""
        //// 错误发生后停止gradle构建
        abortOnError false
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildToolsVersion = '28.0.3'
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }
}
repositories{
    flatDir {
        dirs 'libs'
    }
}



dependencies {
    compileOnly fileTree(include: [ '*.aar'], dir: 'libs')//需要自己导入  alipaySdk_15.5.9_20181123210601.aar



    api fileTree(include: ['*.jar'], dir: 'libs')
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////utils
    //api (name:'tools-release', ext:'aar')
    api 'androidx.multidex:multidex:2.0.1'//Androidx版
    api 'androidx.constraintlayout:constraintlayout:2.0.1'
    api 'androidx.legacy:legacy-support-v4:1.0.0'
    api 'androidx.appcompat:appcompat:1.2.0'
    api 'androidx.palette:palette:1.0.0'
    api 'androidx.recyclerview:recyclerview:1.1.0'




//    api 'androidx.viewpager2:viewpager2:1.0.0-alpha04'
    api 'com.google.android.material:material:1.2.0'

    api 'com.google.android:flexbox:1.1.1'


    api 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:5.1.6'
    api 'com.tencent.tbs.tbssdk:sdk:43939'//x5webview 暂时不支持 api 29，android10


    api 'com.google.code.gson:gson:2.8.6'
    api('com.squareup.okhttp3:okhttp:4.8.1')


    //图片加载
    api 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    implementation "com.github.bumptech.glide:okhttp-integration:4.11.0"
    annotationProcessor 'androidx.annotation:annotation:1.1.0'


    //图片加载
    //图片拾取
    implementation 'com.github.LuckSiege.PictureSelector:picture_library:v2.5.3'

    //身份证拾取
    api 'com.github.lvzhihao100:ORCamera:1.1'

    api 'com.google.zxing:core:3.4.0'
    api 'com.journeyapps:zxing-android-embedded:3.6.0'


     //下拉刷新
    api 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-andx-11'
    api 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-andx-11'
    api 'androidx.legacy:legacy-support-v4:1.0.0'


    //y验证码
    api 'com.justkiddingbaby:vercodeedittext:1.1.0'
    //密码输入框
    api 'com.github.maning0303:MNPasswordEditText:V1.0.2'


    //tablayout  比较全的tab效果
    api 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'
    api 'com.github.warkiz.widget:indicatorseekbar:2.1.0'


    //seekbar
    //很多的工具类
    api 'com.blankj:utilcodex:1.30.4'

    //底部导航栏
    api 'com.github.ittianyu:BottomNavigationViewEx:2.0.4'
    api 'q.rorbin:badgeview:1.1.0'

    //视频播放的 要用可以打开
    //KKVideoPlayer
//#必选， 视频用到
//    implementation 'androidx.viewpager2:viewpager2:1.0.0-alpha04'
//
    api 'com.github.dueeeke.dkplayer:dkplayer-java:3.2.6'
    api 'com.github.dueeeke.dkplayer:dkplayer-ui:3.2.6'
    api 'com.github.dueeeke.dkplayer:player-ijk:3.2.6'
    api 'com.github.dueeeke.dkplayer:videocache:3.2.6'


}




//// 指定编码
//tasks.withType(JavaCompile) {
////     options.encoding = "UTF-8"
//}
// 打包源码
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

//
//task javadoc(type: Javadoc) {
//    failOnError  false
//    source = android.sourceSets.main.java.sourceFiles
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//    classpath += configurations.compile
//}
//// 制作文档(Javadoc)
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
artifacts {
    archives sourcesJar
//    archives javadocJar
}